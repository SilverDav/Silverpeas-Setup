<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://www.w3.org/2001/XMLSchema"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:mi="http://www.silverpeas.org/schema/migration"
           targetNamespace="http://www.silverpeas.org/schema/migration"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified"
           version="1.0">

  <xs:annotation>
    <xs:documentation xml:lang="en">
      <![CDATA[
      Copyright (C) 2000 - 2017 Silverpeas

      This program is free software: you can redistribute it and/or modify
      it under the terms of the GNU Affero General Public License as
      published by the Free Software Foundation, either version 3 of the
      License, or (at your option) any later version.

      As a special exception to the terms and conditions of version 3.0 of
      the GPL, you may redistribute this Program in connection with Free/Libre
      Open Source Software ("FLOSS") applications as described in Silverpeas's
      FLOSS exception.  You should have received a copy of the text describing
      the FLOSS exception, and it is also available here:
      "http://www.silverpeas.org/docs/core/legal/floss_exception.html"

      This program is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU Affero General Public License for more details.
      ]]>
    </xs:documentation>
  </xs:annotation>

  <xs:annotation>
    <xs:documentation xml:lang="en">
      <![CDATA[
      This schema defines the grammar of a data source migration descriptor. Each descriptor
      defines for a given Silverpeas module a set of rules to migrate the data source schema for
      this module. It is made up of two main elements:
        - current to specify the current version of the data source schema for the Silverpeas module,
        - upgrade to specify the version from which the rules has to be applied in order to pass to
        the next version.
       Each of these elements defines a list of scripts to run in order to migrate the data source
       schema for the Silverpeas module. A migration can be either a fresh installation of the
       schema or an upgrade of an existing schema.
      ]]>
    </xs:documentation>
  </xs:annotation>

  <xs:element name="migration">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        <![CDATA[
     The migration element is the root of the migration descriptor. Note that the sub-elements of
     this element are ordered as following:
      - current to specify the current version of the data source schema for the Silverpeas module,
      - upgrade to specify the version from which the rules has to be applied in order to pass to
        the next version.
      The current sub-element is mandatory whereas the upgrade sub-element can be specified one or
      several times, each of them indicating an upgrade from a given data source schema version.
      The current element accepts as attribute the current version of the data source schema
      required by the Silverpeas module. The current element defines the rules set to apply for
      a fresh installation of the Silverpeas module. The upgrade element accepts as attribute the
      actual version of the data source schema for which it has to be taken into account in order
      to upgrade the schema to the next version. Each upgrade element defines a rules set to apply
      for upgrading the data source schema from the actual version to the next one. One or more
      upgrade can be then performed sequentially according to the actual version of the schema and
      the current version expected by the module.
      ]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="current" minOccurs="1" maxOccurs="1">
          <xs:complexType>
            <xs:complexContent>
              <xs:extension base="mi:ScriptList">
                <xs:attribute name="version" type="xs:token" use="required"/>
              </xs:extension>
            </xs:complexContent>
          </xs:complexType>
        </xs:element>
        <xs:element name="upgrade" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:complexContent>
              <xs:extension base="mi:ScriptList">
                <xs:attribute name="fromVersion" type="xs:token" use="required"/>
              </xs:extension>
            </xs:complexContent>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="module" type="xs:normalizedString" use="required"/>
      <xs:attribute name="order" type="xs:int" use="optional"/>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="ScriptList">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        <![CDATA[
      The ScriptList type defines a migration rules set. A migration rules set is made up of one
      or more scripts whose aim is to either install the data source schema required by the module
      or to upgrade it.
      Each script sub-element is defined by a script name (a filename the migration engine is able
      to locate) and a script type.
      ]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="script" minOccurs="1" maxOccurs="unbounded">
        <xs:complexType>
          <xs:attribute name="name" type="xs:token" use="required"/>
          <xs:attribute name="type" type="mi:ScriptType" use="required"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="ScriptType">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        <![CDATA[
      The ScriptType type is an enumeration of tokens, each of them defining a given script type.
      Currently, only SQL and Groovy scripts are supported to migrate a data source schema.
      ]]>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="sql"/>
      <xs:enumeration value="groovy"/>
    </xs:restriction>
  </xs:simpleType>

</xs:schema>